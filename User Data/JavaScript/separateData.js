const fs = require('fs');
const appendFileSync = require('fs').appendFileSync

let generatedData = require('./userCreation.js');
var userData = generatedData.allUsers;

const monthCount = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0};
var months = ['January', 'February', 'March', 'April', 'May', 'June',
'July', 'August', 'September', 'October', 'November', 'December'];

// generate variables to hold data
// all data collected array
var allData = [];

// count of times an imported data item
// appears within the imported data
var counts = [];

// arrays of accounts, ages, companies, account completions, and names
var createdAccounts = [];
var userAges = [];
var userNames = [];
var userCompanies = [];
var isComplete = [];

// set timeout of code chunk to ensure that the data
// being imported has enough time to render in this file
// because the data is generated by an async api call
setTimeout(() => {

    // iterate through all users within the imported dataset
    for (let user of userData) {
        // set a var that holds the current time
        let time = new Date();

        // create a var that holds the birth year
        let year = user.dob.split("-");
        year = year[0];

        // push the calculated age of the user,
        // name of the user, user work place (userCompanies),
        // and userAccounts (contains months and counts)
        userAges.push(time.getFullYear() - year);
        userNames.push(user.name);
        userCompanies.push(user.occupation);
        createdAccounts.push(user.created);

        // create a condition to determine if the 
        // users profile is created based on a randomly
        // generated float number between 0 and 1
        if (user.completed > 0.5) {
            isComplete.push(true);
        }
        else {
            isComplete.push(false);
        }
    }

    // changes each item in the createdAccounts array to 
    // be equal to itself minus the first index in the array
    // then turned into a number
    createdAccounts = createdAccounts.map(e => e.split("-").slice(0)).map(e => parseInt(e));

    // checks for repeat months and adds to the current
    // count plus one
    createdAccounts.forEach(function(number) {
        monthCount[number] += 1;
    });

    // add each count of profiles generated in every respective month
    // to the counts array (jan - dec)
    counts = Object.values(monthCount);

    // generate the outgoing data to be an array of months
    // (jan - dec) and the count of user profiles created
    // in those respective months as an array
    allData = [months, counts];


    // append new data to the designated file
    try {
        appendFileSync('User Data/JavaScript/data.js', JSON.stringify(allData));
        console.log('The "data to append" was appended to file!');
      } catch (err) {
        console.log("-----------error appending to file-----------")
      }

      // set timeout to 10 seconds to ensure data is successfully imported
}, 10000);